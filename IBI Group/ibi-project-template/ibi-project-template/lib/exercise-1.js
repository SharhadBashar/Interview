"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _async2 = _interopRequireDefault(require("./async.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/* eslint-disable no-restricted-globals */
var _default = (gateManager, callbackFunction) => {
  gateManager.fetchGateIdSet((error, gateIdSet) => {
    if (error) {
      callbackFunction(error);
      return;
    }
    const closedGateIds = [];
    _async2.default.each(Array.from(gateIdSet), (gateId, callbackFunction) => {
      gateManager.fetchGateStatus({
        gateId
      }, (error, gateStatus) => {
        if (error) {
          callbackFunction(error);
          return;
        }
        console.log(gateId, gateStatus);
        if (gateStatus === 'closed') {
          closedGateIds.push(gateId);
        }
        callbackFunction();
      });
    }, error => {
      if (error) {
        callbackFunction(error);
        return;
      }
      _async2.default.eachSeries(closedGateIds, (gateId, callbackFunction) => {
        gateManager.openGate({
          gateId
        }, error => {
          if (error) {
            callbackFunction(error);
            return;
          }
          setTimeout(() => {
            callbackFunction();
          }, 1000);
        });
      }, error => {
        if (error) {
          callbackFunction(error);
        } else {
          callbackFunction();
        }
      });
    });
  });
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnYXRlTWFuYWdlciIsImNhbGxiYWNrRnVuY3Rpb24iLCJmZXRjaEdhdGVJZFNldCIsImVycm9yIiwiZ2F0ZUlkU2V0IiwiY2xvc2VkR2F0ZUlkcyIsIl9hc3luYyIsImVhY2giLCJBcnJheSIsImZyb20iLCJnYXRlSWQiLCJmZXRjaEdhdGVTdGF0dXMiLCJnYXRlU3RhdHVzIiwiY29uc29sZSIsImxvZyIsInB1c2giLCJlYWNoU2VyaWVzIiwib3BlbkdhdGUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZXMiOlsiLi4vanMvZXhlcmNpc2UtMS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1yZXN0cmljdGVkLWdsb2JhbHMgKi9cbmltcG9ydCBfYXN5bmMgZnJvbSAnLi9hc3luYy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IChnYXRlTWFuYWdlciwgY2FsbGJhY2tGdW5jdGlvbikgPT4ge1xuICAgIGdhdGVNYW5hZ2VyLmZldGNoR2F0ZUlkU2V0KChlcnJvciwgZ2F0ZUlkU2V0KSA9PiB7XG4gICAgICAgIFxuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrRnVuY3Rpb24oZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY2xvc2VkR2F0ZUlkcyA9IFtdO1xuXG4gICAgICAgIF9hc3luYy5lYWNoKEFycmF5LmZyb20oZ2F0ZUlkU2V0KSwgKGdhdGVJZCwgY2FsbGJhY2tGdW5jdGlvbikgPT4ge1xuICAgICAgICAgICAgZ2F0ZU1hbmFnZXIuZmV0Y2hHYXRlU3RhdHVzKHtcbiAgICAgICAgICAgICAgICBnYXRlSWRcbiAgICAgICAgICAgIH0sIChlcnJvciwgZ2F0ZVN0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFja0Z1bmN0aW9uKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhnYXRlSWQsIGdhdGVTdGF0dXMpXG4gICAgICAgICAgICAgICAgaWYgKGdhdGVTdGF0dXMgPT09ICdjbG9zZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsb3NlZEdhdGVJZHMucHVzaChnYXRlSWQpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGNhbGxiYWNrRnVuY3Rpb24oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFja0Z1bmN0aW9uKGVycm9yKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF9hc3luYy5lYWNoU2VyaWVzKGNsb3NlZEdhdGVJZHMsIChnYXRlSWQsIGNhbGxiYWNrRnVuY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICBnYXRlTWFuYWdlci5vcGVuR2F0ZSh7XG4gICAgICAgICAgICAgICAgICAgIGdhdGVJZFxuICAgICAgICAgICAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFja0Z1bmN0aW9uKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tGdW5jdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tGdW5jdGlvbihlcnJvcik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2tGdW5jdGlvbigpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBO0FBQWdDO0FBRGhDO0FBQUEsZUFHZSxDQUFDQSxXQUFXLEVBQUVDLGdCQUFnQixLQUFLO0VBQzlDRCxXQUFXLENBQUNFLGNBQWMsQ0FBQyxDQUFDQyxLQUFLLEVBQUVDLFNBQVMsS0FBSztJQUU3QyxJQUFJRCxLQUFLLEVBQUU7TUFDUEYsZ0JBQWdCLENBQUNFLEtBQUssQ0FBQztNQUN2QjtJQUNKO0lBRUEsTUFBTUUsYUFBYSxHQUFHLEVBQUU7SUFFeEJDLGVBQU0sQ0FBQ0MsSUFBSSxDQUFDQyxLQUFLLENBQUNDLElBQUksQ0FBQ0wsU0FBUyxDQUFDLEVBQUUsQ0FBQ00sTUFBTSxFQUFFVCxnQkFBZ0IsS0FBSztNQUM3REQsV0FBVyxDQUFDVyxlQUFlLENBQUM7UUFDeEJEO01BQ0osQ0FBQyxFQUFFLENBQUNQLEtBQUssRUFBRVMsVUFBVSxLQUFLO1FBQ3RCLElBQUlULEtBQUssRUFBRTtVQUNQRixnQkFBZ0IsQ0FBQ0UsS0FBSyxDQUFDO1VBQ3ZCO1FBQ0o7UUFDQVUsT0FBTyxDQUFDQyxHQUFHLENBQUNKLE1BQU0sRUFBRUUsVUFBVSxDQUFDO1FBQy9CLElBQUlBLFVBQVUsS0FBSyxRQUFRLEVBQUU7VUFDekJQLGFBQWEsQ0FBQ1UsSUFBSSxDQUFDTCxNQUFNLENBQUM7UUFDOUI7UUFFQVQsZ0JBQWdCLEVBQUU7TUFDdEIsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxFQUFFRSxLQUFLLElBQUk7TUFDUixJQUFJQSxLQUFLLEVBQUU7UUFDUEYsZ0JBQWdCLENBQUNFLEtBQUssQ0FBQztRQUN2QjtNQUNKO01BRUFHLGVBQU0sQ0FBQ1UsVUFBVSxDQUFDWCxhQUFhLEVBQUUsQ0FBQ0ssTUFBTSxFQUFFVCxnQkFBZ0IsS0FBSztRQUMzREQsV0FBVyxDQUFDaUIsUUFBUSxDQUFDO1VBQ2pCUDtRQUNKLENBQUMsRUFBRVAsS0FBSyxJQUFJO1VBQ1IsSUFBSUEsS0FBSyxFQUFFO1lBQ1BGLGdCQUFnQixDQUFDRSxLQUFLLENBQUM7WUFDdkI7VUFDSjtVQUVBZSxVQUFVLENBQUMsTUFBTTtZQUNiakIsZ0JBQWdCLEVBQUU7VUFDdEIsQ0FBQyxFQUFFLElBQUksQ0FBQztRQUNaLENBQUMsQ0FBQztNQUNOLENBQUMsRUFBRUUsS0FBSyxJQUFJO1FBQ1IsSUFBSUEsS0FBSyxFQUFFO1VBQ1BGLGdCQUFnQixDQUFDRSxLQUFLLENBQUM7UUFDM0IsQ0FBQyxNQUFNO1VBQ0hGLGdCQUFnQixFQUFFO1FBQ3RCO01BQ0osQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ04sQ0FBQyxDQUFDO0FBQ04sQ0FBQztBQUFBIn0=
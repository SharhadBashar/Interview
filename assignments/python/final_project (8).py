# -*- coding: utf-8 -*-
"""Final Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ec4dCPPI-POp0XyRYTJzyfDywJdPsLXy
"""

# a) Create a line chart that shows the DJIA adjusted price over time.

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime

# Load the dataset into a Pandas DataFrame
df = pd.read_csv("DJX.csv")

# Convert the date column to datetime
df['Date'] = pd.to_datetime(df['Date'])

# Extract the date and adjusted close columns
Dates = df['Date']
AdjustedClose = df['AdjustedClose']

# Create a line plot
plt.plot(Dates, AdjustedClose)
plt.xlabel('Date')
plt.ylabel('Adjusted Closing Price')
plt.title('DJIA Stock Price')

# Plot in Green colour
plt.plot(Dates, AdjustedClose, color='green')

# Show the plot
plt.show()

# b) Create a line chart that shows the DJIA adjusted price as compared with your
# selected companyâ€™s adjusted stock price. For this chart, use dual axes.

# Read the adjusted close price of DJIA from DJX csv file
stockSymbol = 'DJX'
stock = pd.read_csv(stockSymbol +'.csv', index_col=0)
stock = stock[['AdjustedClose']]
stock.rename(columns={'AdjustedClose':stockSymbol}, inplace=True)
stock[stockSymbol + '_Return'] = stock.pct_change()
stock.head()

# Read the adjusted close price of META from META csv file
indexSymbol = 'META'
index = pd.read_csv(indexSymbol +'.csv', index_col=0)
index = index[['AdjustedClose']]
index.rename(columns={'AdjustedClose':indexSymbol}, inplace=True)
index[indexSymbol +'_Return'] = index.pct_change()
index.head()

# Merge the data
df = index.join(stock)
df.head()


# Customize the plot

df[[stockSymbol,indexSymbol]].plot()
plt.title('DJIA vs META Stock Price')
plt.xlabel('Date')
plt.ylabel('Adjusted Closing Price')
plt.legend()
plt.grid(False)
plt.show()

# c) Compute the daily returns for the DJIA, and display these in a histogram.

# Read the daily returns of DJIA from DJX csv file
indexSymbol = 'DJX'
index = pd.read_csv(indexSymbol +'.csv', index_col=0)
index = index[['AdjustedClose']]
index.rename(columns={'AdjustedClose':indexSymbol}, inplace=True)
index[indexSymbol +'_Return'] = index.pct_change()
index.head()

# Display these in historam
df[stockSymbol+'_Return'].plot(kind='hist', bins=30, edgecolor='black', color='green')
plt.title('Histogram of DJIA Daily Returns')
plt.xlabel('Daily Returns')
plt.ylabel('Frequency')
plt.show()

# d) Create a scatter chart showing the relationship of the DJIA daily return to the
# daily returns of your selected company.

# Read the adjusted close price of DJIA from DJX csv file
stockSymbol = 'DJX'
stock = pd.read_csv(stockSymbol +'.csv', index_col=0)
stock = stock[['AdjustedClose']]
stock.rename(columns={'AdjustedClose':stockSymbol}, inplace=True)
stock[stockSymbol + '_Return'] = stock.pct_change()
stock.head()

# Read the adjusted close price of META from META csv file
indexSymbol = 'META'
index = pd.read_csv(indexSymbol +'.csv', index_col=0)
index = index[['AdjustedClose']]
index.rename(columns={'AdjustedClose':indexSymbol}, inplace=True)
index[indexSymbol +'_Return'] = index.pct_change()
index.head()

# Merge the data
df = index.join(stock)
df.head()

# Customize the scatter chart
df.plot(kind='scatter', x=indexSymbol+'_Return', y=stockSymbol+'_Return', color='green')
plt.title('Scatter Chart of DJIA vs META Daily Returns')